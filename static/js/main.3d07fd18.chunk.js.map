{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleClickSortAlpabeticaly","setState","ALPHABET","handleClickSortByLength","LENGTH","handleClickReverse","handleClickReset","this","sortedGoods","goods","visibleGoods","sort","prevGood","nextGood","localeCompare","length","reverse","getReorderedGoods","isReset","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,4BAA8B,WAC5B,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,wBAA0B,WACxB,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,mBAAqB,WACnB,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBES,iBAAmB,WACjB,EAAKL,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KArBzD,4CAwBE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EA5DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAEzB,OAAQX,GACN,KAAKL,EAASS,SACZQ,EAAaC,MAAK,SAACC,EAAUC,GAAX,OAChBD,EAASE,cAAcD,MACzB,MAEF,KAAKpB,EAASW,OACZM,EAAaC,MAAK,SAACC,EAAUC,GAAX,OAChBD,EAASG,OAASF,EAASE,UAG/B,KAAKtB,EAASM,MAShB,OAJIF,GACFa,EAAaM,UAGRN,EAkCeO,CAClBvB,EAAiB,CAAEI,WAAUD,eAGzBqB,EAAUrB,GAAcC,IAAaL,EAASM,KAEpD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYvB,IAAaL,EAASS,WAEtCoB,QAASf,KAAKP,4BANhB,iCAWA,wBACEoB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYvB,IAAaL,EAASW,SAEtCkB,QAASf,KAAKJ,wBANhB,4BAWA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAaxB,IAEjByB,QAASf,KAAKF,mBANhB,qBAWCa,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,iBAHhB,sBAUJ,6BACGE,EAAYe,KAAK,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIIA,GAHGA,eAlFnB,GAAyBC,aC5DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3d07fd18.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { Component } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((prevGood, nextGood) => (\n        prevGood.localeCompare(nextGood)));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((prevGood, nextGood) => (\n        prevGood.length - nextGood.length));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleClickSortAlpabeticaly = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleClickSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleClickReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleClickReset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const sortedGoods = getReorderedGoods(\n      goodsFromServer, { sortType, isReversed },\n    );\n\n    const isReset = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.handleClickSortAlpabeticaly}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.handleClickSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.handleClickReverse}\n          >\n            Reverse\n          </button>\n\n          {isReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleClickReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {sortedGoods.map((good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              { good }\n            </li>\n          )))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}